apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: modelmesh-paylood-automation
  annotations:
    tekton.dev/output_artifacts: '{}'
    tekton.dev/input_artifacts: '{}'
    tekton.dev/artifact_bucket: mlpipeline
    tekton.dev/artifact_endpoint: minio-service.kubeflow:9000
    tekton.dev/artifact_endpoint_scheme: http://
    tekton.dev/artifact_items: '{"modelmesh-send-payloads": []}'
    sidecar.istio.io/inject: "false"
    pipelines.kubeflow.org/pipeline_spec: '{"description": "Model mesh payload automation",
      "inputs": [{"default": "SimpleStringTF CifarPytorch MnistOnnx", "name": "payload_model_type",
      "optional": true, "type": "String"}, {"default": "60", "name": "payload_query_duration_in_seconds",
      "optional": true, "type": "String"}], "name": "modelmesh-paylood-automation"}'
spec:
  params:
  - name: payload_model_type
    value: SimpleStringTF CifarPytorch MnistOnnx
  - name: payload_query_duration_in_seconds
    value: '60'
  pipelineSpec:
    params:
    - name: payload_model_type
      default: SimpleStringTF CifarPytorch MnistOnnx
    - name: payload_query_duration_in_seconds
      default: '60'
    tasks:
    - name: modelmesh-send-payloads
      params:
      - name: payload_model_type
        value: $(params.payload_model_type)
      - name: payload_query_duration_in_seconds
        value: $(params.payload_query_duration_in_seconds)
      taskSpec:
        steps:
        - name: main
          args:
          - -ma
          - $(inputs.params.payload_model_type)
          - -u
          - dns:///modelmesh-serving.modelmesh-serving:8033
          - -npm
          - '5000'
          - -wp
          - '100'
          - -dur
          - $(inputs.params.payload_query_duration_in_seconds)
          - -qps
          - '400'
          - -cp
          - '100'
          command:
          - ./multi_model_test
          image: aipipeline/modelmesh-payload:latest
        params:
        - name: payload_model_type
        - name: payload_query_duration_in_seconds
        metadata:
          labels:
            pipelines.kubeflow.org/cache_enabled: "false"
            pipelines.kubeflow.org/pipelinename: ''
            pipelines.kubeflow.org/generation: ''
          annotations:
            pipelines.kubeflow.org/component_spec: '{"description": "Component for
              sending modelmesh predictor payloads", "implementation": {"container":
              {"args": ["-ma", {"inputValue": "model_type"}, "-u", {"inputValue":
              "inference_server_url"}, "-npm", {"inputValue": "number_of_models"},
              "-wp", {"inputValue": "number_of_workers"}, "-dur", {"inputValue": "duration"},
              "-qps", {"inputValue": "queries_per_second"}, "-cp", {"inputValue":
              "number_of_connections"}], "command": ["./multi_model_test"], "image":
              "aipipeline/modelmesh-payload:latest"}}, "inputs": [{"default": "MnistSklearn",
              "description": "Model type for constructing payloads.", "name": "model_type",
              "type": "String"}, {"default": "dns:///modelmesh-serving.modelmesh-serving:8033",
              "description": "Inference Server URL", "name": "inference_server_url",
              "type": "String"}, {"default": "1", "description": "Number of model
              name 1 to npm per model to generate", "name": "number_of_models", "type":
              "String"}, {"default": "1", "description": "Number of worker pool",
              "name": "number_of_workers", "type": "String"}, {"default": "1", "description":
              "Test duration in seconds", "name": "duration", "type": "String"}, {"default":
              "1", "description": "Constant Queries Per Second to hold", "name": "queries_per_second",
              "type": "String"}, {"default": "1", "description": "Number of connections
              to create.", "name": "number_of_connections", "type": "String"}], "name":
              "modelmesh-send-payloads"}'
            tekton.dev/template: ''
      timeout: 0s
  timeout: 0s
